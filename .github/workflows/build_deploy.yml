name: Build and deploy

on:
  push:
    branches:
      - master

jobs:
    build_flutter_android:
        name: Build Flutter Android
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                flutter-version: 3.19.0
                # optional parameters follow
                cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
                cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
                pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
                pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
            - run: flutter pub get
            - run: flutter build apk
            - run: flutter build appbundle
        
    # build_flutter_ios:
    #     name: Build Flutter iOS
    #     runs-on: macos-latest
    #     steps:
    #         - uses: actions/checkout@v4
    #         - name: Set up Flutter
    #           uses: subosito/flutter-action@v2
    #           with:
    #             channel: stable
    #             cache: true
    #             # optional parameters follow
    #             cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
    #             cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
    #             pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
    #             pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
    #         - run: flutter pub get
    #         - run: flutter build ios --release --no-codesign

    # deploy_django:
    #     name: Deploy Django
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Deploy to server
    #           if: ${{ !env.ACT }}
    #           uses: appleboy/ssh-action@master
    #           with:
    #             host: ${{ secrets.SERVER_HOST }}
    #             username: ${{ secrets.SERVER_USER }}
    #             password: ${{ secrets.SERVER_PASSWORD }}
    #             port: ${{ secrets.SERVER_PORT }}
    #             script: |
    #                 cd ${{ secrets.PROJECT_PATH }}
    #                 git pull ${{ secrets.REPO_URL }}
    #                 docker-compose down
    #                 docker-compose up --build -d
